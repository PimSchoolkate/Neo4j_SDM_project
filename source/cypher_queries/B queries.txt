1. Find the top 3 most cited papers of each conference:
 
WITH pa, co, count(*) as cites
ORDER BY co, cites DESC
WITH co, collect([pa,cites]) as papers
RETURN co.name as conference, co.date as date, coalesce(papers[0][0].title,"") as first_paper, 
coalesce(papers[0][1],"") as times_cited_1, coalesce(papers[1][0].title,"") as second_paper, 
coalesce(papers[1][1],"") as times_cited_2, coalesce(papers[2][0].title, "") as third_paper, 
coalesce(papers[2][1], "") as times_cited_3

2. For each conference nd its community: i.e., those authors that have published papers
on that conference in, at least, 4 dierent editions:

MATCH (co:Conference)-[:Publishes]->(:Paper)<-[:Writes]-(au:Author)
WITH co.name as conference, au.name as author, count(distinct co.date) as conferences_contrib
WHERE conferences_contrib > 3
RETURN conference, collect(author) as community

3. Find the impact factors of the journals in your graph:

MATCH (jo:Journal)-[]-(pa:Paper)<-[ci:Cites]-()
WITH jo.name AS name ,jo.year AS year, ToFloat(COUNT(ci)) AS citations
CALL {
    WITH name, year
    MATCH (jo2:Journal {name: name})-[pu:Publishes]-()
    WHERE jo2.year IN [year-2, year-1]
    RETURN ToFloat(COUNT(pu)) AS prior_publications
}
RETURN name, year, CASE prior_publications WHEN 0 THEN 0 ELSE (citations/prior_publications) END AS impact_factor
ORDER BY impact_factor DESC

4. Find the h-indexes of the authors in your graph:

MATCH (au:Author)-[wr:Writes]->(pa1:Paper)<-[ci:Cites]-(pa2:Paper)
WITH au, wr, pa1, COUNT(ci) as times_cited
WITH times_cited, au.name as author, COUNT(wr) as amount_published
RETURN author, (CASE WHEN amount_published <= times_cited THEN amount_published ELSE times_cited END) as h_index
ORDER BY h_index DESC 
